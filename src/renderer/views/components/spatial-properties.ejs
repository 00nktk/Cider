<script type="text/x-template" id="spatial-properties">
    <div class="modal-fullscreen spatialproperties-panel">
        <div class="modal-window">
            <div class="modal-header">
                <div class="modal-title">Spatial Properties</div>
                <button class="close-btn" @click="app.resetState()"></button>
            </div>
            <div class="modal-content">
                <div class="row">
                    <div class="col">
                        <label>
                            Width
                            <input type="number" min="0" @change="setRoom()" style="width: 100%;font-size: 1em;font-family: inherit;"
                                   v-model="app.cfg.audio.spatial_properties.room_dimensions.width" step="1"/>
                        </label>
                        <label>
                            Height
                            <input type="number" min="0" @change="setRoom()" style="width: 100%;font-size: 1em;font-family: inherit;"
                                   v-model="app.cfg.audio.spatial_properties.room_dimensions.height" step="1"/>
                        </label>
                        <label>
                            Depth
                            <input type="number" min="0" @change="setRoom()" style="width: 100%;font-size: 1em;font-family: inherit;"
                                   v-model="app.cfg.audio.spatial_properties.room_dimensions.depth" step="1"/>
                        </label>
                        <label v-if="!app.cfg.audio.normalization">
                            Gain
                            <input type="number" min="0" @change="setRoom()" style="width: 100%;font-size: 1em;font-family: inherit;"
                                   v-model="app.cfg.audio.spatial_properties.gain" step="0.1"/>
                        </label>
                    </div>
                    <div class="col visual-container">
                        <div class="visual">
                            <div class="face" :style="[faceStyle()]"></div>
                            <div class="face" :style="[faceStyle(), topFaceStyle()]"></div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col"></div>
                    <div class="col">
                        <label>
                            Up
                            <select class="md-select" @change="setRoom()"
                                    v-model="app.cfg.audio.spatial_properties.room_materials.up">
                                <option v-for="prop in roomProps" :value="prop">{{ prop }}</option>
                            </select>
                        </label>
                    </div>
                    <div class="col"></div>
                </div>
                <div class="row">
                    <div class="col">
                        <label>
                            Left
                            <select class="md-select" @change="setRoom()"
                                    v-model="app.cfg.audio.spatial_properties.room_materials.left">
                                <option v-for="prop in roomProps" :value="prop">{{ prop }}</option>
                            </select>
                        </label>
                    </div>
                    <div class="col">
                        <label>
                            Front
                            <select class="md-select" @change="setRoom()"
                                    v-model="app.cfg.audio.spatial_properties.room_materials.front">
                                <option v-for="prop in roomProps" :value="prop">{{ prop }}</option>
                            </select>
                        </label>
                        <label>
                            Back
                            <select class="md-select" @change="setRoom()"
                                    v-model="app.cfg.audio.spatial_properties.room_materials.back">
                                <option v-for="prop in roomProps" :value="prop">{{ prop }}</option>
                            </select>
                        </label>
                    </div>
                    <div class="col">
                        <label>
                            Right
                            <select class="md-select" @change="setRoom()"
                                    v-model="app.cfg.audio.spatial_properties.room_materials.right">
                                <option v-for="prop in roomProps" :value="prop">{{ prop }}</option>
                            </select>
                        </label>
                    </div>
                </div>
                <div class="row">
                    <div class="col"></div>
                    <div class="col">
                        <label>
                            Down
                            <select class="md-select" @change="setRoom()"
                                    v-model="app.cfg.audio.spatial_properties.room_materials.down">
                                <option v-for="prop in roomProps" :value="prop">{{ prop }}</option>
                            </select>
                        </label>
                    </div>
                    <div class="col"></div>
                </div>
            </div>
        </div>
    </div>
</script>

<script>
    Vue.component('spatial-properties', {
        template: '#spatial-properties',
        data: function () {
            return {
                app: this.$root,
                roomProps: [
                    'transparent',
                    'acoustic-ceiling-tiles',
                    'brick-bare',
                    'brick-painted',
                    'concrete-block-coarse',
                    'concrete-block-painted',
                    'curtain-heavy',
                    'fiber-glass-insulation',
                    'glass-thin',
                    'glass-thick',
                    'grass',
                    'linoleum-on-concrete',
                    'marble',
                    'metal',
                    'parquet-on-concrete',
                    'plaster-smooth',
                    'plywood-panel',
                    'polished-concrete-or-tile',
                    'sheetrock',
                    'water-or-ice-surface',
                    'wood-ceiling',
                    'wood-panel',
                    'uniform'
                ],
                visualMultiplier: 4
            }
        },
        props: {},
        mounted() {

        },
        methods: {
            topFaceStyle() {
                let style = {
                    transform: `rotateX(60deg) rotateZ(-45deg) translateZ(${this.app.cfg.audio.spatial_properties.room_dimensions.height * this.visualMultiplier}px)`
                }
                return style
            },
            faceStyle() {
                let style = {
                    width: `${this.app.cfg.audio.spatial_properties.room_dimensions.width * this.visualMultiplier}px`,
                    height: `${this.app.cfg.audio.spatial_properties.room_dimensions.depth * this.visualMultiplier}px`,
                }
                return style
            },
            setRoom() {
                window.CiderAudio.audioNodes.spatialNode.setRoomProperties(app.cfg.audio.spatial_properties.room_dimensions, app.cfg.audio.spatial_properties.room_materials);
                if(!this.app.cfg.audio.normalization) {
                    window.CiderAudio.audioNodes.gainNode.gain.value = app.cfg.audio.spatial_properties.gain
                }
            }
        }
    });
</script>