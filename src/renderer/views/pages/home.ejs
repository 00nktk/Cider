<script type="text/x-template" id="cider-home">
    <div class="content-inner home-page">
        <div class="bg-image"></div>
        <div>
            <div class="row">
                <div class="col">
                    <h3>Home</h3>
                    <div class="well profile-well">
                        <div class="user-icon">
                            <mediaitem-artwork shadow="none" :url="profile.attributes.artwork.url" size="300"></mediaitem-artwork>
                        </div>
                        <h3 class="name">{{ profile.attributes.name }}</h3>
                        <h4 class="handle">@{{ profile.attributes.handle }}</h4>
                    </div>
                </div>
                <div class="col">
                    <h3>Recently Played</h3>
                    <div class="well">
                        <mediaitem-list-item v-for="item in recentlyPlayed.limit(6)" :item="item"></mediaitem-list-item>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <h3>Your Favorites</h3>
                    <div class="well">
                        <div class="hint-text">Items you have added to your favorites will appear here.</div>
                        <!-- <mediaitem-scroller-horizontal kind="small" :items="friendsListeningTo" :item="item"></mediaitem-scroller-horizontal> -->
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col madeforyou-col">
                    <h3>Made For You</h3>
                    <div class="well">
                        <mediaitem-square kind="small" v-for="item in madeForYou" :item="item"></mediaitem-square>
                    </div>
                </div>
                <div class="col">
                    <h3>Your Artist Feed</h3>
                    <div class="well">
                        <template v-if="artistFeed.length > 0">
                            <mediaitem-list-item v-for="item in artistFeed.limit(6)" :item="item"></mediaitem-list-item>
                        </template>
                        <template v-else>
                            <div class="hint-text">No new activity from followed artists</div>
                        </template>
                    </div>
                </div>
            </div>
            <div class="row" v-if="friendsListeningTo && friendsListeningTo != []">
                <div class="col">
                    <h3>Friends Listening To</h3>
                    <div class="well">
                        <mediaitem-square kind="small" v-for="item in friendsListeningTo" :item="item"></mediaitem-square>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>

<script>
    Vue.component('cider-home', {
        template: '#cider-home',
        data: function () {
            return {
                app: this.$root,
                followedArtists: this.$root.cfg.home.followedArtists,
                madeForYou: [],
                recentlyPlayed: [],
                friendsListeningTo: [],
                profile: {},
                modify: 0,
                artistFeed: []
            }
        },
        async mounted() {
            let self = this
            this.getListenNowData()
            await this.getArtistFeed()
        },
        methods: {
            async getArtistFeed() {
                let artists = this.followedArtists
                let self = this
                console.warn("get artist feed")
                this.app.mk.api.artists(artists, {
                    "views": "featured-release,full-albums,appears-on-albums,featured-albums,featured-on-albums,singles,compilation-albums,live-albums,latest-release,top-music-videos,similar-artists,top-songs,playlists,more-to-hear,more-to-see",
                    "extend": "artistBio,bornOrFormed,editorialArtwork,editorialVideo,isGroup,origin,hero",
                    "extend[playlists]": "trackCount",
                    "include[songs]": "albums",
                    "fields[albums]": "artistName,artistUrl,artwork,contentRating,editorialArtwork,editorialVideo,name,playParams,releaseDate,url,trackCount",
                    "limit[artists:top-songs]": 20,
                    "art[url]": "f"
                }, { includeResponseMeta: !0 }).then(artistData => {
                    artistData.data.forEach(item => {
                        if(item.views["latest-release"].data.length != 0) {
                            self.artistFeed.push(item.views["latest-release"].data[0])
                        }
                    })
                    console.warn("got artist feed")
                    console.log(self.artistFeed)
                })

            },
            getRecentlyPlayed() {

            },
            async getListenNowData() {
                let self = this
                this.app.mk.api.personalRecommendations("",
                    {
                        name: "listen-now",
                        with: "friendsMix,library,social",
                        "art[social-profiles:url]": "c",
                        "art[url]": "c,f",
                        "omit[resource]": "autos",
                        "relate[editorial-items]": "contents",
                        extend: ["editorialCard", "editorialVideo"],
                        "extend[albums]": ["artistUrl"],
                        "extend[library-albums]": ["artistUrl", "editorialVideo"],
                        "extend[playlists]": ["artistNames", "editorialArtwork", "editorialVideo"],
                        "extend[library-playlists]": ["artistNames", "editorialArtwork", "editorialVideo"],
                        "extend[social-profiles]": "topGenreNames",
                        "include[albums]": "artists",
                        "include[songs]": "artists",
                        "include[music-videos]": "artists",
                        "fields[albums]": ["artistName", "artistUrl", "artwork", "contentRating", "editorialArtwork", "editorialVideo", "name", "playParams", "releaseDate", "url"],
                        "fields[artists]": ["name", "url"],
                        "extend[stations]": ["airDate", "supportsAirTimeUpdates"],
                        "meta[stations]": "inflectionPoints",
                        types: "artists,albums,editorial-items,library-albums,library-playlists,music-movies,music-videos,playlists,stations,uploaded-audios,uploaded-videos,activities,apple-curators,curators,tv-shows,social-profiles,social-upsells",
                        platform: "web"
                    },
                    {
                        includeResponseMeta: !0,
                        reload: !0
                    }
                ).then((data) => {
                    console.log(data.data[1])
                    try{
                        self.madeForYou = data.data.filter(section => {
                            if (section.meta.metrics.moduleType == "6") {
                                return section
                            }
                            ;
                        })[0].relationships.contents.data
                    }
                    catch(err){}
                    try{
                        self.recentlyPlayed = data.data[1].relationships.contents.data
                        self.friendsListeningTo = data.data.filter(section => {
                            if (section.meta.metrics.moduleType == "11") {
                                return section
                            }
                            ;
                        })[0].relationships.contents.data
                    }catch(err){}
                });

                app.mk.api.v3.music("/v1/me/social/profile/").then((response) => {
                    self.profile = response.data.data[0]
                    console.log("!!!")
                    console.log(response.data.data[0])
                })

            }
        }
    });
</script>